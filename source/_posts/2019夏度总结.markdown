---
title: 2019夏度总结
copyright: true
toc: true
author: tyrantqiao
categories: []
abbrlink: cf33d1e
date: 2019-10-17 23:27:07
tags:
---

# 2019-07-01~2019-10-17 总结

## 工作

> 工作上大致可以分为三个阶段，tutorial->tutorialProject->real的阶段，每个阶段的生活以及作息都大有不同，简短地做些总结。

```sequence
tutorial->tutorialProject: 简单地培训了下各方面的内容【规范、银行知识】以及tutorialProject时所需要用到的框架知识
tutorialProject->real: 这里其实就只是随着安排直接跳转到新的部门进行新的征程了，没有什么过渡的地方

tutorial-->tutorialProject: 框架培训【可视化业务逻辑编程】
tutorial-->tutorialProject: vue编程【这玩意还真是写一次就忘一次】
tutorialProject-->tutorial: 对于框架的东西真的很需要讲解以及文档，像前端的文档格式太糟糕了
tutorialProject-->real: 111

Note left of tutorial: 业务+技术框架
Note left of tutorialProject: 人力资源项目
Note left of real: 【活动维护】
```

## 反思

- 做事要大胆点
    - 人际交往上
    - 代码上，要敢于用学到的东西
- 了解需求
    - 明白做的是什么
    - 有什么意义
    - 为什么要这么做，除了自身这边的开发需要，也要了解关联系统的运转流程，这样子才不会出问题
- 检查
    - 规范
    - 经验
    - 交流

## 重构框架的想法

> 2019-11-18 做到底层，暂时有点MVC的思想，其实DDD【Domain Drive Design】就是一种业务建模的方式，去对要完成的业务进行切分，建模，而不是从建表开始设计。这种思想主要是为了让业务、开发能保证在一个理解的线上。

## DDD

1. 领域是什么？具体要完成一个业务对象，它可以是一项业务，也可以是一个用户域，账号域。
2. 实体与值对象是什么？实体是有唯一标识，生命周期界定的对象，而值对象是依赖于实体存在的，脱离了实体就毫无意义。
    > 举个例子就是：手机号对于用户而言，就是值对象，脱离了用户，这就只是串数字，毫无意义，它没有自己的生命周期。但是在另外一个场景，比如移动APP，手机号就是一个实体，它有自己的生命周期，下面有着自己的值对象，比如手机套餐等。