---
abbrlink: '0'
---
# 会计

> 银行中了解会计体系，可以更好地理解业务体系，虽然目前做的跟传统金融没啥关系，但是也可以了解下会计的世界，继而更好地实现自己的业务代码编写。

## 左右记账

> 对于每个个体（包括银行）而言，分为两大栏目：**资产**和**负债**，资产的减少相当于负债的增加，这两者是相互联系的，对于程序员而言，这块理解为两个流水表，各自记录信息，这样子虽然交互多，但是能够提高记账的效率（试想只有一个流水表，当某项资产需要扣减时，得花大量时间用于查询），且当系统发生故障时，我们可以通过对账的机制进行回滚、修复。

如上文引述的分为两个账本进行记账，每个账本记录的格式大致相同，有**初始资本**、**流水账（增、减分开记录）**、**汇总增以及汇总减**，`轧差=初始+汇总增-汇总减`

## 三个算

- 结算：
    涉及买卖，商贸交易的财务，体现在前端
- 清算：
    涉及债务，会计主体之间债权，债务的清零，跨行清算路径，后端转财务
- 核算：
    上述交易影响会计科目与报表，由会计核算

## 转账模式

### 收付款

```sequence {theme="hand"}
pay->receive: pay message
pay->receive: pay finance
receive-->>pay: receive message
receive-->>pay: receive result:yes or no
```

### 辖区内转账

```sequence {theme="hand"}
Liquidation1->Liquidation2: Liquidation
Liquidation2->bankBranch: Liquidation if Rolling difference != 0

Note left of Liquidation1: Liquidation
```

### 备份金模式

```flow
st=>start: 核算网点
op=>operation: 省清算中心
op1=>operation: 省一级清算
sub=>subroutine: 总行清算
op3=>operation: B省一级清算
op4=>operation: B省总行清算

st->op
op->op1
op1->sub(left)
sub(right)->op3
op3->op4
```

### 资金池模式

> 把由下往上的钱汇总起来，而不用存储，需要时再进行取，避免了各子机构需要钱财时，不好取，且预存款时对额度的把控难以界定。

### 跨行的备用金

> 跨行转账可以通过在央行的存储金之间的流动，完成转账交易。比如说工行转1w给农行，只需要工行在央行的储备金-1w，随即农行在央行的储备金+1w即可

## 支付宝的转账体系

> 支付宝在一开始可以实现各银行账户之间的转账，与上述的跨行备用金模式类似，通过在各行开辟账号，账号之间的流动，也就实现了资金的流动，但是这样子资金的流动就难以统一，对于国家程度来说难以掌控。后续改为通过网银支付清算。

改动点：
    - 上收备用金，不能支付，只能用于清算
    - 用户以钱包方式与第三方支付进行清算，并通过充值/提现的方式将钱包与银行账户进行关联，现在转账的形式将通过银行账户分类来进行限制

## 外汇

### 外汇管制

- 不得以外汇标价
- 转账陌生人
- 禁止结算
- 出入境控制外币额度（外币不能兑换过多，防止跑路的现象）

### 出口商外汇兑换问题

```sequence
note left of 出口商: 收到外汇
出口商->银行: 卖给银行
银行->央行: 卖给央行
note right of 央行: 当出口>进口，导致顺差，央行用人民币买外汇，再到国际市场兑换成美元，形成“外汇储备”
```

### 境内外外汇交易

账户分为境内外两个账号，境外的有单位进口、同业存放，境内的存放同业，单位活期-出口